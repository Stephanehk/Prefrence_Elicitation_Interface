{"id":"node_modules/screenshot-desktop/lib/darwin/index.js","dependencies":[{"name":"/Users/stephanehatgiskessell/Desktop/Kivy_stuff/MTURK_interface/package.json","includedInParent":true,"mtime":1623887306034},{"name":"/Users/stephanehatgiskessell/Desktop/Kivy_stuff/MTURK_interface/node_modules/screenshot-desktop/package.json","includedInParent":true,"mtime":499162500000},{"name":"pinkie-promise","loc":{"line":1,"column":24},"parent":"/Users/stephanehatgiskessell/Desktop/Kivy_stuff/MTURK_interface/node_modules/screenshot-desktop/lib/darwin/index.js","resolved":"/Users/stephanehatgiskessell/Desktop/Kivy_stuff/MTURK_interface/node_modules/pinkie-promise/index.js"},{"name":"child_process","loc":{"line":2,"column":21},"parent":"/Users/stephanehatgiskessell/Desktop/Kivy_stuff/MTURK_interface/node_modules/screenshot-desktop/lib/darwin/index.js","resolved":"/Users/stephanehatgiskessell/Desktop/Kivy_stuff/MTURK_interface/node_modules/parcel-bundler/src/builtins/_empty.js"},{"name":"temp","loc":{"line":3,"column":21},"parent":"/Users/stephanehatgiskessell/Desktop/Kivy_stuff/MTURK_interface/node_modules/screenshot-desktop/lib/darwin/index.js","resolved":"/Users/stephanehatgiskessell/Desktop/Kivy_stuff/MTURK_interface/node_modules/temp/lib/temp.js"},{"name":"fs","loc":{"line":4,"column":19},"parent":"/Users/stephanehatgiskessell/Desktop/Kivy_stuff/MTURK_interface/node_modules/screenshot-desktop/lib/darwin/index.js","resolved":"/Users/stephanehatgiskessell/Desktop/Kivy_stuff/MTURK_interface/node_modules/parcel-bundler/src/builtins/_empty.js"},{"name":"../utils","loc":{"line":5,"column":22},"parent":"/Users/stephanehatgiskessell/Desktop/Kivy_stuff/MTURK_interface/node_modules/screenshot-desktop/lib/darwin/index.js","resolved":"/Users/stephanehatgiskessell/Desktop/Kivy_stuff/MTURK_interface/node_modules/screenshot-desktop/lib/utils.js"},{"name":"path","loc":{"line":6,"column":21},"parent":"/Users/stephanehatgiskessell/Desktop/Kivy_stuff/MTURK_interface/node_modules/screenshot-desktop/lib/darwin/index.js","resolved":"/Users/stephanehatgiskessell/Desktop/Kivy_stuff/MTURK_interface/node_modules/path-browserify/index.js"}],"generated":{"js":"var __dirname = \"/Users/stephanehatgiskessell/Desktop/Kivy_stuff/MTURK_interface/node_modules/screenshot-desktop/lib/darwin\";\nconst Promise = require('pinkie-promise')\nconst exec = require('child_process').exec\nconst temp = require('temp')\nconst fs = require('fs')\nconst utils = require('../utils')\nconst path = require('path')\n\nconst { unlinkP, readAndUnlinkP } = utils\n\nfunction darwinSnapshot (options = {}) {\n  const performScreenCapture = displays => new Promise((resolve, reject) => {\n    // validate displayId\n    const totalDisplays = displays.length\n    if (totalDisplays === 0) {\n      return reject(new Error('No displays detected try dropping screen option'))\n    }\n    const maxDisplayId = totalDisplays - 1\n    const displayId = options.screen || 0\n    if (!Number.isInteger(displayId) || displayId < 0 || displayId > maxDisplayId) {\n      const validChoiceMsg = (maxDisplayId === 0) ? '(valid choice is 0 or drop screen option altogether)' : `(valid choice is an integer between 0 and ${maxDisplayId})`\n      return reject(new Error(`Invalid choice of displayId: ${displayId} ${validChoiceMsg}`))\n    }\n\n    const format = options.format || 'jpg'\n    let filename\n    let suffix\n    if (options.filename) {\n      const ix = options.filename.lastIndexOf('.')\n      suffix = ix >= 0 ? options.filename.slice(ix) : `.${format}`\n      filename = '\"' + options.filename.replace(/\"/g, '\\\\\"') + '\"'\n    } else {\n      suffix = `.${format}`\n    }\n\n    const tmpPaths = Array(displayId + 1)\n      .fill(null)\n      .map(() => temp.path({ suffix }))\n\n    let pathsToUse = []\n    if (options.filename) {\n      tmpPaths[displayId] = filename\n    }\n    pathsToUse = tmpPaths.slice(0, displayId + 1)\n\n    exec('screencapture' + ' -x -t ' + format + ' ' + pathsToUse.join(' '),\n      function (err, stdOut) {\n        if (err) {\n          return reject(err)\n        } else if (options.filename) {\n          resolve(path.resolve(options.filename))\n        } else {\n          fs.readFile(tmpPaths[displayId], function (err, img) {\n            if (err) {\n              return reject(err)\n            }\n            Promise.all(pathsToUse.map(unlinkP))\n              .then(() => resolve(img))\n              .catch((err) => reject(err))\n          })\n        }\n      })\n  })\n\n  return listDisplays().then((displays) => { return performScreenCapture(displays) })\n}\n\nconst EXAMPLE_DISPLAYS_OUTPUT = `\nGraphics/Displays:\n\n    Intel Iris:\n\n      Chipset Model: Intel Iris\n      Type: GPU\n      Bus: Built-In\n      VRAM (Dynamic, Max): 1536 MB\n      Vendor: Intel (0x8086)\n      Device ID: 0x0a2e\n      Revision ID: 0x0009\n      Displays:\n        Color LCD:\n          Display Type: Retina LCD\n          Resolution: 2560 x 1600 Retina\n          Retina: Yes\n          Pixel Depth: 32-Bit Color (ARGB8888)\n          Main Display: Yes\n          Mirror: Off\n          Online: Yes\n          Built-In: Yes\n        HP 22cwa:\n          Resolution: 1920 x 1080 @ 60Hz (1080p)\n          Pixel Depth: 32-Bit Color (ARGB8888)\n          Display Serial Number: 6CM7201231\n          Mirror: Off\n          Online: Yes\n          Rotation: Supported\n          Television: Yes\n`\n\nfunction extractEntries (output) {\n  const entries = []\n\n  const entryPattern = /(\\s*)(.*?):(.*)\\n/g\n  let match\n  while ((match = entryPattern.exec(output)) !== null) {\n    entries.push({\n      indent: match[1].length,\n      key: match[2].trim(),\n      value: match[3].trim()\n    })\n  }\n\n  return entries\n}\n\nfunction makeSubtree (currIndent, subtree, entries) {\n  let entry\n  while ((entry = entries.shift())) {\n    if (entry.value === '') {\n      if (currIndent < entry.indent) {\n        while (entry.key in subtree) {\n          entry.key += '_1'\n        }\n        subtree[entry.key] = {}\n        makeSubtree(entry.indent, subtree[entry.key], entries)\n      } else {\n        entries.unshift(entry)\n        return\n      }\n    } else {\n      while (entry.key in subtree) {\n        entry.key += '_1'\n      }\n      subtree[entry.key] = entry.value\n    }\n  }\n}\n\nfunction movePrimaryToHead (displays) {\n  const primary = displays.filter(e => e.primary)\n  const notPrimary = displays.filter(e => !e.primary)\n  return [...primary, ...notPrimary]\n}\n\nfunction addId (displays) {\n  let id = 0\n  return displays\n    .map(display => {\n      return Object.assign({}, display, { id: id++ })\n    })\n}\n\nfunction parseDisplaysOutput (output) {\n  const tree = {}\n  makeSubtree(-1, tree, extractEntries(output))\n\n  if (!tree['Graphics/Displays']) {\n    return []\n  }\n\n  const firstGpuKeys = Object.keys(tree['Graphics/Displays'])\n  if (!firstGpuKeys || firstGpuKeys.length <= 0) {\n    return []\n  }\n\n  let displayinfos = []\n\n  firstGpuKeys.forEach(gpukey => {\n    const gpu = tree['Graphics/Displays'][gpukey]\n    if (gpu.Displays) {\n      const temp = Object.entries(gpu.Displays)\n        .map(([name, props]) => {\n          const primary = props['Main Display'] === 'Yes'\n          return { name, primary }\n        })\n      displayinfos = displayinfos.concat(temp)\n    }\n  })\n\n  return addId(movePrimaryToHead(displayinfos))\n}\n\nfunction listDisplays () {\n  return new Promise((resolve, reject) => {\n    exec(\n      'system_profiler SPDisplaysDataType',\n      (err, stdout) => {\n        if (err) {\n          return reject(err)\n        }\n        resolve(parseDisplaysOutput(stdout))\n      })\n  })\n}\n\nfunction all () {\n  return new Promise((resolve, reject) => {\n    listDisplays()\n      .then((displays) => {\n        const tmpPaths = displays.map(() => temp.path({ suffix: '.jpg' }))\n        exec('screencapture -x -t jpg ' + tmpPaths.join(' '), {\n          cwd: __dirname\n        }, function (err, stdOut) {\n          if (err) {\n            return reject(err)\n          } else {\n            Promise.all(tmpPaths.map(readAndUnlinkP))\n              .then(resolve)\n              .catch(reject)\n          }\n        })\n      })\n  })\n}\n\ndarwinSnapshot.listDisplays = listDisplays\ndarwinSnapshot.all = all\ndarwinSnapshot.parseDisplaysOutput = parseDisplaysOutput\ndarwinSnapshot.EXAMPLE_DISPLAYS_OUTPUT = EXAMPLE_DISPLAYS_OUTPUT\n\nmodule.exports = darwinSnapshot\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/screenshot-desktop/lib/darwin/index.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}}],"sources":{"node_modules/screenshot-desktop/lib/darwin/index.js":"const Promise = require('pinkie-promise')\nconst exec = require('child_process').exec\nconst temp = require('temp')\nconst fs = require('fs')\nconst utils = require('../utils')\nconst path = require('path')\n\nconst { unlinkP, readAndUnlinkP } = utils\n\nfunction darwinSnapshot (options = {}) {\n  const performScreenCapture = displays => new Promise((resolve, reject) => {\n    // validate displayId\n    const totalDisplays = displays.length\n    if (totalDisplays === 0) {\n      return reject(new Error('No displays detected try dropping screen option'))\n    }\n    const maxDisplayId = totalDisplays - 1\n    const displayId = options.screen || 0\n    if (!Number.isInteger(displayId) || displayId < 0 || displayId > maxDisplayId) {\n      const validChoiceMsg = (maxDisplayId === 0) ? '(valid choice is 0 or drop screen option altogether)' : `(valid choice is an integer between 0 and ${maxDisplayId})`\n      return reject(new Error(`Invalid choice of displayId: ${displayId} ${validChoiceMsg}`))\n    }\n\n    const format = options.format || 'jpg'\n    let filename\n    let suffix\n    if (options.filename) {\n      const ix = options.filename.lastIndexOf('.')\n      suffix = ix >= 0 ? options.filename.slice(ix) : `.${format}`\n      filename = '\"' + options.filename.replace(/\"/g, '\\\\\"') + '\"'\n    } else {\n      suffix = `.${format}`\n    }\n\n    const tmpPaths = Array(displayId + 1)\n      .fill(null)\n      .map(() => temp.path({ suffix }))\n\n    let pathsToUse = []\n    if (options.filename) {\n      tmpPaths[displayId] = filename\n    }\n    pathsToUse = tmpPaths.slice(0, displayId + 1)\n\n    exec('screencapture' + ' -x -t ' + format + ' ' + pathsToUse.join(' '),\n      function (err, stdOut) {\n        if (err) {\n          return reject(err)\n        } else if (options.filename) {\n          resolve(path.resolve(options.filename))\n        } else {\n          fs.readFile(tmpPaths[displayId], function (err, img) {\n            if (err) {\n              return reject(err)\n            }\n            Promise.all(pathsToUse.map(unlinkP))\n              .then(() => resolve(img))\n              .catch((err) => reject(err))\n          })\n        }\n      })\n  })\n\n  return listDisplays().then((displays) => { return performScreenCapture(displays) })\n}\n\nconst EXAMPLE_DISPLAYS_OUTPUT = `\nGraphics/Displays:\n\n    Intel Iris:\n\n      Chipset Model: Intel Iris\n      Type: GPU\n      Bus: Built-In\n      VRAM (Dynamic, Max): 1536 MB\n      Vendor: Intel (0x8086)\n      Device ID: 0x0a2e\n      Revision ID: 0x0009\n      Displays:\n        Color LCD:\n          Display Type: Retina LCD\n          Resolution: 2560 x 1600 Retina\n          Retina: Yes\n          Pixel Depth: 32-Bit Color (ARGB8888)\n          Main Display: Yes\n          Mirror: Off\n          Online: Yes\n          Built-In: Yes\n        HP 22cwa:\n          Resolution: 1920 x 1080 @ 60Hz (1080p)\n          Pixel Depth: 32-Bit Color (ARGB8888)\n          Display Serial Number: 6CM7201231\n          Mirror: Off\n          Online: Yes\n          Rotation: Supported\n          Television: Yes\n`\n\nfunction extractEntries (output) {\n  const entries = []\n\n  const entryPattern = /(\\s*)(.*?):(.*)\\n/g\n  let match\n  while ((match = entryPattern.exec(output)) !== null) {\n    entries.push({\n      indent: match[1].length,\n      key: match[2].trim(),\n      value: match[3].trim()\n    })\n  }\n\n  return entries\n}\n\nfunction makeSubtree (currIndent, subtree, entries) {\n  let entry\n  while ((entry = entries.shift())) {\n    if (entry.value === '') {\n      if (currIndent < entry.indent) {\n        while (entry.key in subtree) {\n          entry.key += '_1'\n        }\n        subtree[entry.key] = {}\n        makeSubtree(entry.indent, subtree[entry.key], entries)\n      } else {\n        entries.unshift(entry)\n        return\n      }\n    } else {\n      while (entry.key in subtree) {\n        entry.key += '_1'\n      }\n      subtree[entry.key] = entry.value\n    }\n  }\n}\n\nfunction movePrimaryToHead (displays) {\n  const primary = displays.filter(e => e.primary)\n  const notPrimary = displays.filter(e => !e.primary)\n  return [...primary, ...notPrimary]\n}\n\nfunction addId (displays) {\n  let id = 0\n  return displays\n    .map(display => {\n      return Object.assign({}, display, { id: id++ })\n    })\n}\n\nfunction parseDisplaysOutput (output) {\n  const tree = {}\n  makeSubtree(-1, tree, extractEntries(output))\n\n  if (!tree['Graphics/Displays']) {\n    return []\n  }\n\n  const firstGpuKeys = Object.keys(tree['Graphics/Displays'])\n  if (!firstGpuKeys || firstGpuKeys.length <= 0) {\n    return []\n  }\n\n  let displayinfos = []\n\n  firstGpuKeys.forEach(gpukey => {\n    const gpu = tree['Graphics/Displays'][gpukey]\n    if (gpu.Displays) {\n      const temp = Object.entries(gpu.Displays)\n        .map(([name, props]) => {\n          const primary = props['Main Display'] === 'Yes'\n          return { name, primary }\n        })\n      displayinfos = displayinfos.concat(temp)\n    }\n  })\n\n  return addId(movePrimaryToHead(displayinfos))\n}\n\nfunction listDisplays () {\n  return new Promise((resolve, reject) => {\n    exec(\n      'system_profiler SPDisplaysDataType',\n      (err, stdout) => {\n        if (err) {\n          return reject(err)\n        }\n        resolve(parseDisplaysOutput(stdout))\n      })\n  })\n}\n\nfunction all () {\n  return new Promise((resolve, reject) => {\n    listDisplays()\n      .then((displays) => {\n        const tmpPaths = displays.map(() => temp.path({ suffix: '.jpg' }))\n        exec('screencapture -x -t jpg ' + tmpPaths.join(' '), {\n          cwd: __dirname\n        }, function (err, stdOut) {\n          if (err) {\n            return reject(err)\n          } else {\n            Promise.all(tmpPaths.map(readAndUnlinkP))\n              .then(resolve)\n              .catch(reject)\n          }\n        })\n      })\n  })\n}\n\ndarwinSnapshot.listDisplays = listDisplays\ndarwinSnapshot.all = all\ndarwinSnapshot.parseDisplaysOutput = parseDisplaysOutput\ndarwinSnapshot.EXAMPLE_DISPLAYS_OUTPUT = EXAMPLE_DISPLAYS_OUTPUT\n\nmodule.exports = darwinSnapshot\n"},"lineCount":222}},"error":null,"hash":"cf20dd39004cf221f216f63d4c5998b8","cacheData":{"env":{}}}